:PROPERTIES:
:ID:       dba7d8ff-be1f-4fa0-9a19-b41a7e207a70
:END:
#+title: PowerShell - Test Credentials
#+filetags: :powershell:
#+hugo_base_dir:../



* Testing credentials
#+begin_src shell -n :exports both
function Test-Cred {

    [CmdletBinding()]
    [OutputType([String])]

    Param (
        [Parameter(
            Mandatory = $false,
            ValueFromPipeLine = $true,
            ValueFromPipelineByPropertyName = $true
        )]
        [Alias(
            'PSCredential'
        )]
        [ValidateNotNull()]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]
        $Credentials
    )
    $Domain = $null
    $Root = $null
    $Username = $null
    $Password = $null

    If($Credentials -eq $null)
    {
        Try
        {
            $Credentials = Get-Credential "UHHS\$env:username" -ErrorAction Stop
        }
        Catch
        {
            $ErrorMsg = $_.Exception.Message
            Write-Warning "Failed to validate credentials: $ErrorMsg "
            Pause
            Break
        }
    }

    # Checking module
    Try
    {
        # Split username and password
        $Username = $credentials.username
        $Password = $credentials.GetNetworkCredential().password

        # Get Domain
        $Root = "LDAP://" + ([ADSI]'').distinguishedName
        $Domain = New-Object System.DirectoryServices.DirectoryEntry($Root,$UserName,$Password)
    }
    Catch
    {
        $_.Exception.Message
        Continue
    }

    If(!$domain)
    {
        Write-Warning "Something went wrong"
    }
    Else
    {
        If ($domain.name -ne $null)
        {
            return "Authenticated"
        }
        Else
        {
            return "Not authenticated"
        }
    }
}
#+end_src
