:PROPERTIES:
:ID:       f2fd2ce6-ba91-4772-9ce3-0ee7b045c222
:END:
#+title: Recon - Port Scanning and Nmap
#+filetags: :infosec:nmap:pentest:
#+hugo_base_dir:../



* Nmap scanning
** SYN (stealth) scan
TCP handshake not completed (ACK not sent)
#+begin_src shell -n
nmap -sS <ip>
#+end_src
Because the three-way handshake is never completed, the information is not passed to the application layer and as a result, will not appear in any application logs. A SYN scan is also faster and more efficient because fewer packets are sent and received.
** TCP Connect Scan
#+begin_src shell -n
nmap -sT <ip>
#+end_src
** TCP SYN Scan and UDP Scan
#+begin_src shell -n
nmap -sU -sS 192.168.2.1
#+end_src
** Ping sweep with greppable output
#+begin_src shell -n
nmap -v -sn 192.168.100.1-253 -oG sweep.txt
grep Up sweep.txt | cut -d " " -f 2
#+end_src
** --top-ports=10
Option defined in =/usr/share/nmap/nmap-services=
** Other scans
#+begin_src sh
nmap -sC -sV -oA nmap/result <ip>
#+end_src
Flags:
    - =-oA <basename>: Output in the three major formats at once=
    - =-sV: Probe open ports to determine service/version info=
    - =-sC: default scripts=


Full TCP:
#+begin_src sh
nmap -sV -sC -p- -o nmap.out -vvv $RHOST
#+end_src

** UDP Scan
#+begin_src sh
sudo nmap -sU -sS -sC -sV -oA <NAME>.udp <IP> -v
#+end_src

#+begin_src sh
nmap -sU --top-ports 20 -o nmap-udp.out -vvv $RHOST
#+end_src
** Script categories
#+begin_src sh
nmap --script vuln,safe,discovery -oN scan.txt target-ip
#+end_src

** List available nse scripts
#+begin_src sh
ls -lh /usr/share/nmap/scripts/
#+end_src

** nmap through socks4 proxy
#+begin_src sh
nmap --proxies socks4://proxy-ip:1080 target-ip
#+end_src
** ftp bounce scan
#+begin_src sh
nmap -P0 -n -b username:password@target-ip target2-ip --proxies socks4://proxy-ip:1080 -vvv
#+end_src
** format
#+begin_src sh
ports=$(nmap -p- -Pn --min-rate=1000 -T4 10.10.11.205 | grep '^[0-9]' | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
nmap -p$ports -Pn -sC -sV 10.10.11.205
#+end_src
* nmap Automator

#+begin_src sh
nmapAutomator <IP> All
#+end_src
* Windows
#+begin_src shell -n
1..1024 | % {echo ((New-Object Net.Sockets.TcpClient).Connect("192.168.2.1", $_)) "TCP port $_ is open"} 2>$null
#+end_src
