:PROPERTIES:
:ID:       928ee0c5-d8d7-4a86-a808-f3b45f96de4c
:END:
#+title: PowerShell - Writing cmdlets in C#
#+filetags: :cmdlet:csharp:powershell:
#+hugo_base_dir:../


* Writing [[id:9aac309a-a98b-4e34-9f31-5cbeeb993311][powershell]] cmdlets in C#
source: [[https://dotnetninja.net/2020/03/creating-a-powershell-cmdlet-in-c/][dotnetninja]]
** Overview
create a new class that derives from one of two base classes (Cmdlet or PsCmdlet), add properties to the class to accept your parameters, override one or more methods in the base class to provide your functionality, and decorate the class and properties with a few attributes.
** cmdlet name
all defined in constants in the C# reference library

_VerbsCommon_: Add, Clear, Close, Copy, Enter, Exit, Find, Format, Get, Hide, Join, Lock, Move, New, Open, Optimize, Pop, Push, Redo, Remove, Rename, Reset, Resize, Search, Select, Set, Show, Skip, Split, Step, Switch, Undo, Unlock, Watch

_VerbsCommunications_: Connect, Disconnect, Read, Receive, Send, Write

_VerbsData_: Backup, Checkpoint, Compare, Compress, Convert, ConvertFrom, ConvertTo, Dismount, Edit, Expand, Export, Group, Import, Initialize, Limit, Merge, Mount, Out, Publish, Restore, Save, Sync, Unpublish, Update

_VerbsDiagnostic_: Debug, Measure, Ping, Repair, Resolve, Test, Trace

_VerbsLifecycle_: Approve, Assert, Complete, Confirm, Deny, Disable, Enable, Install, Invoke, Register, Request, Restart, Resume, Start, Stop, Submit, Suspend, Uninstall, Unregister, Wait

_VerbsOther_: Use

_VerbsSecurity_: Block, Grant, Protect, Revoke, Unblock, Unprotect
