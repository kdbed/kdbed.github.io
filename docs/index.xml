<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Index on Braindump</title>
    <link>https://kdbed.github.io/</link>
    <description>Recent content in Index on Braindump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 May 2022 21:44:03 +0800</lastBuildDate><atom:link href="https://kdbed.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directory</title>
      <link>https://kdbed.github.io/posts/active_directory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/active_directory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Binary Analysis</title>
      <link>https://kdbed.github.io/posts/binary_analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/binary_analysis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Intro to Pwntools - TryHackMe</title>
      <link>https://kdbed.github.io/posts/introtopwntools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/introtopwntools/</guid>
      <description>Basics of Binary Analysis
Intro to Pwntools Source materials here dizmascyberlabs Install gdb-pwndbg-peda-gef
Checksec Same source code, compiled with different protections in place:
1 checksec checksec/intro2pwn2 1 checksec checksec/intro2pwn1 RELRO = Relocation Read-Only; makes the global offset table (GOT) read-only after the linker resolves functions to it. The GOT is important for techniques such as the ret-to-libc attack Stack Canaries = tokens placed after a stack to detect a stack overflow.</description>
    </item>
    
    <item>
      <title>Kerberoasting</title>
      <link>https://kdbed.github.io/posts/kerberoasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/kerberoasting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>NX</title>
      <link>https://kdbed.github.io/posts/nx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/nx/</guid>
      <description>Binary Analysis</description>
    </item>
    
    <item>
      <title>Originalism</title>
      <link>https://kdbed.github.io/posts/originalism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/originalism/</guid>
      <description>Originalism, the theory that the Constitution should be interpreted according to the meaning or intent of the drafters, has great appeal to Americans. At one time closely associated with the conservative movement, originalism is now commonly held as an important, if not the exclusive, device for interpreting the Constitution. This has not been our historic practice. Over thirty years ago, Munzer and Nickel (1977, 1029) wrote that â€œone does not have to dig very deeply into the literature of American constitutional law to suspect that many constitutional provisions do not mean today what their framers thought they meant.</description>
    </item>
    
    <item>
      <title>PIE</title>
      <link>https://kdbed.github.io/posts/pie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/pie/</guid>
      <description>Binary Analysis</description>
    </item>
    
    <item>
      <title>Powershell</title>
      <link>https://kdbed.github.io/posts/powershell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/powershell/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PowerShell - Get Domain Controllers in Forest</title>
      <link>https://kdbed.github.io/posts/powershell_get_domain_controllers_in_forest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/powershell_get_domain_controllers_in_forest/</guid>
      <description>To list all of the domain controllers in an Active Directory forest:
(Get-ADForest).Domains | %{ Get-ADDomainController -Filter * -Server $_ }| Format-Table -Property Name,ComputerObjectDN,Domain,Forest,IPv4Address,OperatingSystem,OperatingSystemVersion </description>
    </item>
    
    <item>
      <title>RELRO</title>
      <link>https://kdbed.github.io/posts/relro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/relro/</guid>
      <description>https://www.redhat.com/en/blog/hardening-elf-binaries-using-relocation-read-only-relro</description>
    </item>
    
    <item>
      <title>Stack Canaries</title>
      <link>https://kdbed.github.io/posts/stack_canaries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/stack_canaries/</guid>
      <description>https://www.sans.org/blog/stack-canaries-gingerly-sidestepping-the-cage/</description>
    </item>
    
    <item>
      <title>XOR</title>
      <link>https://kdbed.github.io/posts/xor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/xor/</guid>
      <description>XOR Basics Exclusive or &amp;ndash; &amp;lsquo;XOR&amp;rsquo; &amp;ndash; is a Boolean binary operator that is true when either the first input or the second input, but not both, are true.
XOR is a &amp;lsquo;programmable inverter&amp;rsquo;: one input bit decides whether to invert the other input bit or to just pass it through unchanged. &amp;lsquo;Inverting&amp;rsquo; bits is also called &amp;lsquo;flipping&amp;rsquo; bits.
\(X = A \bigoplus B\)
Properties </description>
    </item>
    
  </channel>
</rss>
