<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WindowsExploitation on Owlglass</title>
    <link>https://kdbed.github.io/tags/windowsexploitation/</link>
    <description>Recent content in WindowsExploitation on Owlglass</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://kdbed.github.io/tags/windowsexploitation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DLL Hijacking</title>
      <link>https://kdbed.github.io/posts/dll_hijacking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/dll_hijacking/</guid>
      <description>&lt;h2 id=&#34;basic-ideas&#34;&gt;Basic Ideas&lt;/h2&gt;&#xA;&lt;p&gt;Windows DLL hijacking occurs when a trusted or legitimate application is tricked into loading an arbitrary DLL.  Dll hijacking can be used to execute code, obtain persistence and escalate privileges, although privilege escalation is the least likely.  &lt;a href=&#34;https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dll-hijacking&#34;&gt;hackTricks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;approaches&#34;&gt;Approaches&lt;/h3&gt;&#xA;&lt;p&gt;There are different approaches to DLL hijacking, and success will be determined by how the application is set to load its DLLs.&lt;/p&gt;&#xA;&lt;p&gt;1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DLL Injection</title>
      <link>https://kdbed.github.io/posts/dll_injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/dll_injection/</guid>
      <description>&lt;h2 id=&#34;dll-injection&#34;&gt;DLL Injection&lt;/h2&gt;&#xA;&lt;h3 id=&#34;api-hooks&#34;&gt;API Hooks&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.apriorit.com/dev-blog/679-windows-dll-injection-for-api-hooks&#34;&gt;https://www.apriorit.com/dev-blog/679-windows-dll-injection-for-api-hooks&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.apriorit.com/dev-blog/160-apihooks%20&#34;&gt;https://www.apriorit.com/dev-blog/160-apihooks%20&lt;/a&gt;&lt;a href=&#34;https://www.apriorit.com/dev-blog/727-win-guide-to-hooking-windows-apis-with-python%20&#34;&gt;https://www.apriorit.com/dev-blog/727-win-guide-to-hooking-windows-apis-with-python%20&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pentest - Active Directory - DCSync</title>
      <link>https://kdbed.github.io/posts/pentest_active_directory_dcsync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pentest_active_directory_dcsync/</guid>
      <description>&lt;h2 id=&#34;dcsync&#34;&gt;DCSync&lt;/h2&gt;&#xA;&lt;p&gt;In BloodHound&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GetChanges&lt;/li&gt;&#xA;&lt;li&gt;GetChangesAll&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--listend--&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;impacket-secretsdump &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;domain&amp;gt;/user:password&amp;#34;&lt;/span&gt;@&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dc.domain.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync&#34;&gt;hacktricks - DCSync&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pentest - Active Directory - SID-History Injection</title>
      <link>https://kdbed.github.io/posts/pentest_active_directory_sid_history_injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pentest_active_directory_sid_history_injection/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sentinelone.com/blog/windows-sid-history-injection-exposure-blog/#:~:text=SID%20History%20Injection%20is%20one,privileges%20bypassing%20existing%20access%20controls.&#34;&gt;SentinelOne&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://adsecurity.org/?p=1772&#34;&gt;ADSecurity&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://attack.mitre.org/techniques/T1134/005/&#34;&gt;MITRE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skeleton Key</title>
      <link>https://kdbed.github.io/posts/pentest_active_directory_skeleton_key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pentest_active_directory_skeleton_key/</guid>
      <description>&lt;h2 id=&#34;skeleton-key&#34;&gt;Skeleton Key&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;&lt;strong&gt;Skeleton Key&lt;/strong&gt;&lt;/strong&gt; is a stealthy backdoor attack where Mimikatz injects a patch into &lt;strong&gt;&lt;strong&gt;LSASS memory&lt;/strong&gt;&lt;/strong&gt; on a Domain Controller. This allows an attacker to &lt;strong&gt;&lt;strong&gt;authenticate as any domain user using a master password&lt;/strong&gt;&lt;/strong&gt;, in addition to their real credentials.&lt;/p&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Injects code into `lsass.exe` on a Domain Controller&lt;/li&gt;&#xA;&lt;li&gt;Leaves legitimate logins untouched&lt;/li&gt;&#xA;&lt;li&gt;Adds a universal password valid for all domain accounts&lt;/li&gt;&#xA;&lt;li&gt;Memory-resident: disappears on reboot&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SYSTEM-level access on a &lt;strong&gt;&lt;strong&gt;Domain Controller&lt;/strong&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Ability to execute code and patch LSASS memory&lt;/li&gt;&#xA;&lt;li&gt;Mimikatz or similar tool&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;key-concepts&#34;&gt;Key Concepts&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;LSASS&lt;/strong&gt;: Local Security Authority Subsystem Service; handles authentication&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Patch&lt;/strong&gt;: Modifies Kerberos/NTLM authentication providers in memory&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Backdoor password&lt;/strong&gt;: An additional universal password accepted for all users&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mimikatz-commands&#34;&gt;Mimikatz Commands&lt;/h3&gt;&#xA;&lt;h4 id=&#34;load-skeleton-key-patch&#34;&gt;Load Skeleton Key Patch&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# privilege::debug&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# misc::skeleton&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Default password: mimikatz&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
