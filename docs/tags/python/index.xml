<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Braindump</title>
    <link>https://kdbed.github.io/tags/python/</link>
    <description>Recent content in python on Braindump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://kdbed.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FTP - retrieve files with Python</title>
      <link>https://kdbed.github.io/posts/ftp_retrieve_files_with_python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/ftp_retrieve_files_with_python/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Org Mode - Python/Jupyter Example</title>
      <link>https://kdbed.github.io/posts/orgpythonjupyter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/orgpythonjupyter/</guid>
      <description>Create a Session Initialize server with org-babel-exp-src-block. Afterwards, &amp;lsquo;Enter&amp;rsquo; in the sourceblock will execute.
print(&amp;#39;ello, world!&amp;#39;) Create a plot import matplotlib.pyplot as plt fig, ax = plt.subplots() ax.plot([1, 2, 3, 4], [1, 4, 2, 3]) pass Ocaml print_string &amp;#34;Hello world!\n&amp;#34; </description>
    </item>
    
    <item>
      <title>Python - List Comprehensions</title>
      <link>https://kdbed.github.io/posts/python_list_comprehensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/python_list_comprehensions/</guid>
      <description>Python - List Comprehensions List comprehensions are a compact way of defining a list by looping through another list or other data structure. Let&amp;rsquo;s say we want to double every element in a list. Without list comprehensions:
sample_list = [4, 5, 6, 7] new_list = [] for i in range(len(sample_list)): new_list.append(sample_list[i]*2) print(new_list) [8, 10, 12, 14] A simplified way to do this:
newer_list = [2*num for num in sample_list] print(newer_list) [8, 10, 12, 14] List Comprehensions on lists of strings sample_strings = [&amp;#34;python&amp;#34;, &amp;#34;is&amp;#34;, &amp;#34;awesome!</description>
    </item>
    
    <item>
      <title>Reversing - Python</title>
      <link>https://kdbed.github.io/posts/reversing_python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdbed.github.io/posts/reversing_python/</guid>
      <description>Unpacking Python Executables fortinet
extraction pyinstxtractor - extract the contents of a PyInstaller generated executable file
decompile pycdc</description>
    </item>
    
  </channel>
</rss>
