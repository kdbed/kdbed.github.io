<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Auth on Owlglass</title>
    <link>https://kdbed.github.io/tags/auth/</link>
    <description>Recent content in Auth on Owlglass</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://kdbed.github.io/tags/auth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>X11 Authorization</title>
      <link>https://kdbed.github.io/posts/x11_authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kdbed.github.io/posts/x11_authorization/</guid>
      <description>&lt;h2 id=&#34;x11-authorization&#34;&gt;X11 Authorization&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/37157097/how-does-x11-authorization-work-mit-magic-cookie/37367518#37367518&#34;&gt;https://stackoverflow.com/questions/37157097/how-does-x11-authorization-work-mit-magic-cookie/37367518#37367518&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Well, first of all there is a file ~/.Xauthority on the machine. Notice that (usually on machine with GUI) wrong permissions of this file, can cause a login screen loop&amp;hellip; (took me hours to understand that).&lt;/p&gt;&#xA;&lt;p&gt;As you mentioned there are 5 mechanisms:&lt;/p&gt;&#xA;&lt;p&gt;Host access: the server has host access list (if a network address exists in this list, the connection is permitted). the list is managed using xhost command. NOTE: this doesn&amp;rsquo;t allow more than a single connection simultaneously. I don&amp;rsquo;t know more about this method because I don&amp;rsquo;t really used it. but you can see man Xserver GRANTING ACCESS section :)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
